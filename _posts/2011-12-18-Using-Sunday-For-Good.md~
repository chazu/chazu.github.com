---
layout: post
category : meta
tags : [introduction]
---
{% include JB/setup %}

If you've ever tried to learn a technology which involves programming, you've probably seen at least a few forum posts from ambitious beginners saying "I want to do X with language/technology Y. My goal is to have Super Complex and Ambitious Features B, C and D fit together in a new way to make something really cool. Where do I start learning technology Y?

Now, most people who aren't too wet behind the ears when it comes to programming will look at those posts and shake their heads, even though any programming buff was in the same scenario at one point. Nobody starts learning to program because they want to make a mortgage calculator or a program to test the number of times you drop the f-bomb in a given paragraph.

That's fine, but I'm here to say that its good to be ambitious from the get-go when learning to program. There are a few reasons for this, in my opinion.

Firstly, if you want to program you're going to need to be able to break problems down into smaller problems. More than that, you'll need to be able to think about those sub-problems in different ways, or to envision multiple configurations of sub-problems for a given problem. This isn't a very eloquent description, but I think you get the point.

This ability to subdivide challenges and tackle them bit by bit can also be applied to those big projects. Its much easier to start out wanting to change the world with your project and to devise ten sub-projects which will help you learn the skills to make that game-changing whoosit than it is to get totally jazzed up about any project you can complete and comprehend in a day's worth of work...Put another way: in my experience, those small applications which serve as learning opportunities or stepping stones on the way to programming literacy generally spring from enthusiasm about a larger project, or a larger idea in general.

I tend to think of my self-learning in programming as analogous to the way crystals grow in a solution. You might have several solid chunks precipitating out of the solution, which eventually coalesce into a giant hunk of crystal, perfect for throwing at your sister. And that's the end goal, right?

There are other benefits, such as the fact that having one exciting, ambitious goal can be a catalyst for learning diverse and varied skills and techniques (see the crystal analogy), or the idea that you will be able to better keep up your motivation if you have an ambitious goal in mind. Of course, realism is important, as is working within your limitations or using them to your advantage.

If you have any thoughts on the matter, please share them with me. This is a topic of great interest to me, hence the post.